{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tutorials\\\\React-Laravel-Authentication-Forgot-Password\\\\SOURCE-CODE\\\\react-auth\\\\src\\\\pages\\\\Reset.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = ({\n  match\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [password_confirm, setPasswordConfirm] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const submit = async e => {\n    e.preventDefault();\n    const token = match.parems.token;\n    try {\n      const response = await axios.post('reset', {\n        token,\n        password,\n        password_confirm: password\n      });\n      setRedirect(true);\n    } catch (e) {}\n  };\n  useEffect(() => {\n    if (redirect) {\n      navigate('/login');\n    }\n  }, [redirect, navigate]); // Trigger useEffect when 'redirects' changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-signin container\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3 font-weight-normal\",\n        children: \" Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password_confirm\",\n        className: \"form-control\",\n        placeholder: \"Password Confirm\",\n        required: true,\n        onChange: e => setPasswordConfirm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-lg btn-primary btn-block\",\n        type: \"submit\",\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Reset, \"PIy/kdv47/6trzfsuSFFi2na3Dc=\", false, function () {\n  return [useNavigate];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Reset","match","_s","password","setPassword","password_confirm","setPasswordConfirm","redirect","setRedirect","navigate","submit","e","preventDefault","token","parems","response","post","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","onChange","target","value","style","marginTop","_c","$RefreshReg$"],"sources":["D:/Tutorials/React-Laravel-Authentication-Forgot-Password/SOURCE-CODE/react-auth/src/pages/Reset.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Reset = ({ match }: { match: any }) => {\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [password_confirm, setPasswordConfirm] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n\r\n    const navigate = useNavigate(); // Initialize the navigate function\r\n\r\n\r\n    const submit = async (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n\r\n        const token = match.parems.token;\r\n        try {\r\n            const response = await axios.post('reset', {\r\n                token,\r\n                password,\r\n                password_confirm: password\r\n\r\n            });\r\n\r\n            setRedirect(true);\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (redirect) {\r\n            navigate('/login');\r\n        }\r\n    }, [redirect, navigate]); // Trigger useEffect when 'redirects' changes\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form-signin container\" onSubmit={submit}>\r\n\r\n\r\n                <h1 className='h3 mb-3 font-weight-normal'> Reset Password</h1>\r\n\r\n                <input type=\"password\" className='form-control' placeholder='Password' required\r\n                    onChange={e => setPassword(e.target.value)} />\r\n\r\n                <input type=\"password_confirm\" className='form-control' placeholder='Password Confirm' required\r\n                    onChange={e => setPasswordConfirm(e.target.value)} />\r\n\r\n                <button className='btn btn-lg btn-primary btn-block' type='submit' style={{ marginTop: '10px' }}>Reset</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}